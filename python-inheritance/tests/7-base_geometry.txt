>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> BaseGeometry().area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# 2. integer_validator accepts a correct integer > 0 without error
>>> bg = BaseGeometry()
>>> bg.integer_validator("size", 5)  # no output, no exception

# 3. integer_validator rejects non-int types
>>> bg.integer_validator("width", 3.14)
Traceback (most recent call last):
    ...
TypeError: width must be an integer

>>> bg.integer_validator("height", "10")
Traceback (most recent call last):
    ...
TypeError: height must be an integer

# 4. integer_validator rejects ints â‰¤ 0
>>> bg.integer_validator("length", 0)
Traceback (most recent call last):
    ...
ValueError: length must be greater than 0

>>> bg.integer_validator("depth", -2)
Traceback (most recent call last):
    ...
ValueError: depth must be greater than 0

# 5. Missing both parameters
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

# 6. Missing value parameter
>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

# 7. value is tuple
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# 8. value is list
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# 9. value is bool
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# 10. value is set
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# 11. value is None
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
